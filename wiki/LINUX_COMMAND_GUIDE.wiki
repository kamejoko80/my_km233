= MOT SO LENH LINUX CO BAN =

------------------------------------------------------------

== CACH DUNG TAR ==

{{{
1. Creating an archive using tar command

Creating an uncompressed tar archive using option cvf
This is the basic command to create a tar archive.

$ tar cvf archive_name.tar dirname/
In the above command:

c – create a new archive
v – verbosely list files which are processed.
f – following is the archive file name

Creating a tar gzipped archive using option cvzf
The above tar cvf option, does not provide any compression. To use a gzip compression on the tar archive, use the z option as shown below.

$ tar cvzf archive_name.tar.gz dirname/
z – filter the archive through gzip
Note: .tgz is same as .tar.gz

Note: I like to keep the ‘cvf’ (or tvf, or xvf) option unchanged for all archive creation (or view, or extract) and add additional option at the end, which is easier to remember. i.e cvf for archive creation, cvfz for compressed gzip archive creation, cvfj for compressed bzip2 archive creation etc., For this method to work properly, don’t give – in front of the options.

Creating a bzipped tar archive using option cvjf
Create a bzip2 tar archive as shown below:

$ tar cvfj archive_name.tar.bz2 dirname/
j – filter the archive through bzip2
gzip vs bzip2: bzip2 takes more time to compress and decompress than gzip. bzip2 archival size is less than gzip.

Note: .tbz and .tb2 is same as .tar.bz2

2. Extracting (untar) an archive using tar command

Extract a *.tar file using option xvf
Extract a tar file using option x as shown below:

$ tar xvf archive_name.tar
x – extract files from archive
Extract a gzipped tar archive ( *.tar.gz ) using option xvzf
Use the option z for uncompressing a gzip tar archive.

$ tar xvfz archive_name.tar.gz
Extracting a bzipped tar archive ( *.tar.bz2 ) using option xvjf
Use the option j for uncompressing a bzip2 tar archive.

$ tar xvfj archive_name.tar.bz2
Note: In all the above commands v is optional, which lists the file being processed.

3. Listing an archive using tar command

View the tar archive file content without extracting using option tvf
You can view the *.tar file content before extracting as shown below.

$ tar tvf archive_name.tar
View the *.tar.gz file content without extracting using option tvzf
You can view the *.tar.gz file content before extracting as shown below.

$ tar tvfz archive_name.tar.gz
View the *.tar.bz2 file content without extracting using option tvjf
You can view the *.tar.bz2 file content before extracting as shown below.

$ tar tvfj archive_name.tar.bz2
4. Listing out the tar file content with less command

When the number of files in an archive is more, you may pipe the output of tar to less. But, you can also use less command directly to view the tar archive output, as explained in one of our previous article Open & View 10 Different File Types with Linux Less Command — The Ultimate Power of Less.

5. Extract a single file from tar, tar.gz, tar.bz2 file

To extract a specific file from a tar archive, specify the file name at the end of the tar xvf command as shown below. The following command extracts only a specific file from a large tar file.

$ tar xvf archive_file.tar /path/to/file
Use the relevant option z or j according to the compression method gzip or bzip2 respectively as shown below.

$ tar xvfz archive_file.tar.gz /path/to/file

$ tar xvfj archive_file.tar.bz2 /path/to/file
6. Extract a single directory from tar, tar.gz, tar.bz2 file

To extract a single directory (along with it’s subdirectory and files) from a tar archive, specify the directory name at the end of the tar xvf command as shown below. The following extracts only a specific directory from a large tar file.

$ tar xvf archive_file.tar /path/to/dir/
To extract multiple directories from a tar archive, specify those individual directory names at the end of the tar xvf command as shown below.

$ tar xvf archive_file.tar /path/to/dir1/ /path/to/dir2/
Use the relevant option z or j according to the compression method gzip or bzip2 respectively as shown below.

$ tar xvfz archive_file.tar.gz /path/to/dir/

$ tar xvfj archive_file.tar.bz2 /path/to/dir/
7. Extract group of files from tar, tar.gz, tar.bz2 archives using regular expression

You can specify a regex, to extract files matching a specified pattern. For example, following tar command extracts all the files with pl extension.

$ tar xvf archive_file.tar --wildcards '*.pl'
Options explanation:

–wildcards *.pl – files with pl extension
8. Adding a file or directory to an existing archive using option -r

You can add additional files to an existing tar archive as shown below. For example, to append a file to *.tar file do the following:

$ tar rvf archive_name.tar newfile
This newfile will be added to the existing archive_name.tar. Adding a directory to the tar is also similar,

$ tar rvf archive_name.tar newdir/
Note: You cannot add file or directory to a compressed archive. If you try to do so, you will get “tar: Cannot update compressed archives” error as shown below.

$ tar rvfz archive_name.tgz newfile
tar: Cannot update compressed archives
Try `tar --help' or `tar --usage' for more information.
9. Verify files available in tar using option -W

As part of creating a tar file, you can verify the archive file that got created using the option W as shown below.

$ tar cvfW file_name.tar dir/
If you are planning to remove a directory/file from an archive file or from the file system, you might want to verify the archive file before doing it as shown below.

$ tar tvfW file_name.tar
Verify 1/file1
1/file1: Mod time differs
1/file1: Size differs
Verify 1/file2
Verify 1/file3
If an output line starts with Verify, and there is no differs line then the file/directory is Ok. If not, you should investigate the issue.

Note: for a compressed archive file ( *.tar.gz, *.tar.bz2 ) you cannot do the verification.

Finding the difference between an archive and file system can be done even for a compressed archive. It also shows the same output as above excluding the lines with Verify.

Finding the difference between gzip archive file and file system

$ tar dfz file_name.tgz
Finding the difference between bzip2 archive file and file system

$ tar dfj file_name.tar.bz2
10. Estimate the tar archive size

The following command, estimates the tar file size ( in KB ) before you create the tar file.

$ tar -cf - /directory/to/archive/ | wc -c
20480
The following command, estimates the compressed tar file size ( in KB ) before you create the tar.gz, tar.bz2 files.

$ tar -czf - /directory/to/archive/ | wc -c
508

$ tar -cjf - /directory/to/archive/ | wc -c
428

}}}

== CACH APPEND 2 FILE TAR ==

- Append file vao archive: 

{{{
$ tar --append --file=collection.tar rock.txt

Hoac la:

$ tar -rf collection.tar rock.txt
}}}

- Append archive2 vao archive1:

{{{
$ tar -Af archive1.tar archive2.tar
}}}

------------------------------------------------------------

== KERNEL MODULE PARAM ==

  - Pass module param tu tham so bootargs

  - Vi du cho kernel module ren_vdc5fb.c

  {{{
     static int disp_panel;
     module_param(disp_panel, int, 0644);
     MODULE_PARM_DESC(disp_panel, "display panel select number");     
  }}}

  - Khi muon pass tham so disp_panel ta chi viec them vao bootargs :

  {{{
     u-boot> setenv bootargs console=ttySC2,115200 ... ren_vdc5fb.disp_panel=3 ...
  }}}  

  - Trong source kernel module ta co the su dung bien disp_panel mot cach binh thuong.

----------------------------------------------------

1> Script tim 1 đoạn text trong cây thư mục và replace:

= A> =

{{{

# *****************************************************************************************
# find_and_replace_in_files.sh
# This script does a recursive, case sensitive directory search and replace of files
# To make a case insensitive search replace, use the -i switch in the grep call
# uses a startdirectory parameter so that you can run it outside of specified directory - else this script will modify itself!
# *****************************************************************************************

!/bin/bash
# **************** Change Variables Here ************
startdirectory="/your/start/directory"
searchterm="test"
replaceterm="test=ok!"
# **********************************************************

echo "***************************************************"
echo "* Search and Replace in Files Version 01-Aug-2012 *"
echo "***************************************************"

i=0; 

  for file in $(grep -l -R $searchterm $startdirectory)
    do
      cp $file $file.bak
      sed -e "s/$searchterm/$replaceterm/ig" $file > tempfile.tmp
      mv tempfile.tmp $file

    let i++;

      echo "Modified: " $file
    done

echo " *** All Done! *** Modified files:" $i

}}}

= B> =

{{{

Ok, so this might sound childish to the more experienced admins and programmers but I’ve always found the need to search and replace a string in multiple files. For example, if I have to work with an inexperienced programmer’s code, I might have to change the name of the database in a couple of dozen places. If you are in such a place, you might want to try the following script:

for f in submit_*; 
  do sed "s/old_db_name/new_db_name/" < $f > a_$f ; 
  mv a_$f $f ; 
done

The first line finds all files that match the pattern submit_*. The loop first calls sed, makes the replacement and outputs the file to a_$f. Finally, it renames the a_$f file to $f so that we get the original filename. So, there you go. You can make all sorts of complicated finds and replaces through regular expressions and unleash the power of sed on this script. Chao.

}}}

= C> =

{{{
Here I use sed to replace every occurrence of the word "cybernetnews" with "cybernet" in every file with the extension, c, in the directory, /home/user/directory/.

find /home/user/directory -name \*.c -exec sed -i "s/cybernetnews/cybernet/g" {} \;
}}}

= D> =

{{{
A more generic variation where you search recursively from the directory of execution and operate on only regular, readable, writeable files:

find ./ -type f -readable -writable -exec sed -i "s/cybernetnews/cybernet/g" {} \;
}}}

= E> =
{{{
You can use find and -exec directly into sed rather than first locating oldstr with grep. It's maybe a bit less efficient, but that might not be important. This way, the sed replacement is executed over all files listed by find, but if oldstr isn't there it obviously won't operate on it.

find /path -type f -exec sed -i 's/oldstr/newstr/g' {} \;
}}}

= F> =
{{{
I think that without using -exec you can simply provide /dev/null as at least one argument in case nothing is found:

grep -rl oldstr path | xargs sed -i 's/oldstr/newstr/g' /dev/null
}}}

= G> Recommend sử dụng script FIND_AND_REPLACE.sh như sau =

{{{
echo "usage: ./FIND_AND_REPLACE.sh dir oldstr newstr"

read -p "Are you sure? [y/n] " -r
echo    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
    find $1 -type f -exec sed -i 's/'$2'/'$3'/g' {} \;
    echo "Done!"
fi


}}}

Ví dụ:

{{{
 $ .FIND_AND_REPLACE.sh source arm-elf arm-eabi
}}}


Script thực hiện tìm chuỗi arm-elf và replace vào chuỗi arm-eabi (recusive)


-----------------------------------------------------


0> Calib the TFT LCD

{{{
PE-DM Calibration
$ export DISPLAY=0:0
$ xtscal
}}}

0> Modify ramdisk:

{{{
   mount -o loop ramdisk.img ramdisk_dir
}}}

 [http://linuxcookbook.googlecode.com/svn/trunk/books/HowToEditRAMDisk.pdf reference here] 

0> Tìm filename trong thư mục :

{{{
 find -name 'find -name 'init.freescale.rc'
}}}

1> Tim chuoi string trong thu muc :

{{{
Example:
1. find -name ttyUSB *
2. grep -r "CONFIG_LCD_BACKLIGHT_MINI40" *
}}}

2> Play camera su dung mplayer tren KM233:

{{{
$ mplayer -fps 15 tv:// -tv  driver=v4l2:device=/dev/video1 -vo fbdev2
}}}

3> Set DISPLAY cho command line :

{{{
$ export DISPLAY=:0.0
$ xhost +localhost
}}}

4> Xem thong tin cpu clocks

{{{
$ cat /proc/cpu/clocks
asrc_serial_clk-0                     ______    0     1354166 (1MHz)
asrc_clk-0                            ______    1    66666666 (66MHz)
esai_ipg_clk-0                        ______    0    66666666 (66MHz)
esai_clk-0                            ______    0           0 (0Hz)
ldb_di1_clk-1                         P____M    0    74285705 (74MHz)
ldb_di0_clk-0                         P____M    0    74285705 (74MHz)
can_clk-1                             ______    0    24000000 (24MHz)
can_clk-0                             ______    0    24000000 (24MHz)
mxc_mlb.0-0                           ______    0    66666666 (66MHz)
ieee_rtc_clk-0                        ______    0    74250000 (74MHz)
ieee_1588_clk-0                       ______    0    66666666 (66MHz)
imx_sata_clk-0                        ______    0    66666666 (66MHz)
ocram_clk-0                           ______    0           0 (0Hz)
usb_phy2_clk-1                        ______    0    24000000 (24MHz)
imx-i2c.2-2                           ______    0     8000000 (8MHz)
mxcintuart.4-4                        ______    0    66666666 (66MHz)
mxcintuart.3-3                        ______    0    66666666 (66MHz)
pll4-0                                P_____    0   519999936 (519MHz)
mxc_w1.0-0                            ______    0     8000000 (8MHz)
fec.0-0                               ___TH_    0    66666666 (66MHz)
gpt-0                                 ______    1     8000000 (8MHz)
cko1-0                                ______    0           0 (0Hz)
mxc_scc.0-0                           ______    0   133333333 (133MHz)
gpu2d_clk-0                           ___TH_    1   200000000 (200MHz)
garb_clk-0                            ______    0   400000000 (400MHz)
gpu3d_clk-0                           ___TH_    0   200000000 (200MHz)
sahara_clk-0                          ______    0   133333333 (133MHz)
mxc_w1.0-0                            ______    0     8000000 (8MHz)
pata_fsl-0                            ___TH_    0    66666666 (66MHz)
mxc_rtc.0-0                           ______    1       32768 (32KHz)
lpsr_clk-0                            ______    0       32768 (32KHz)
mxc_vpu.0-0                           ___TH_    0   200000000 (200MHz)
mxc_spdif.0-0                         ___TH_    0    24000000 (24MHz)
spdif_xtal_clk-0                      ______    1    24000000 (24MHz)
emi_intr_clk.1-1                      ______    0   133333333 (133MHz)
emi_intr_clk.0-0                      ______    0   133333333 (133MHz)
emi_fast_clk-0                        ______    4   400000000 (400MHz)
emi_enfc_clk-0                        ______    0    33333333 (33MHz)
ddr_clk-0                             P_____    1   400000000 (400MHz)
emi_slow_clk-0                        P_____    0   133333333 (133MHz)
mxsdhci.3-3                           ______    0   200000000 (200MHz)
mxsdhci.2-2                           ______    0   200000000 (200MHz)
mxsdhci.1-1                           ______    1   200000000 (200MHz)
mxsdhci.0-0                           ______    1   200000000 (200MHz)
usb_clk-0                             ______    0    60000000 (60MHz)
usb_utmi_clk-0                        ______    0           0 (0Hz)
usb_phy1_clk-0                        ______    1    24000000 (24MHz)
usb_ahb_clk-0                         ______    1    66666666 (66MHz)
usboh3_clk-0                          ___T_M    1    40000000 (40MHz)
iim_clk-0                             ______    0    66666666 (66MHz)
ssi_ext2_clk-0                        ______    0    12000000 (12MHz)
ssi_ext1_clk-0                        ______    2    23529411 (23MHz)
mxc_ssi.2-2                           ______    0    12000000 (12MHz)
mxc_ssi.1-1                           ______    0    12000000 (12MHz)
mxc_ssi.0-0                           ______    0    12000000 (12MHz)
ssi_lp_apm_clk-0                      ______    0    24000000 (24MHz)
mxc_spi.2-2                           ______    0    66666666 (66MHz)
mxc_spi.1-1                           ______    0    12000000 (12MHz)
mxc_spi.0-0                           ______    0    12000000 (12MHz)
mxc_pwm.1-1                           ______    1     8000000 (8MHz)
mxc_pwm.0-0                           ______    0     8000000 (8MHz)
imx-i2c.1-1                           ______    0     8000000 (8MHz)
i2c_clk-0                             ______    0     8000000 (8MHz)
mxcintuart.2-2                        ___TH_    0    66666666 (66MHz)
mxcintuart.1-1                        ______    0    66666666 (66MHz)
mxcintuart.0-0                        ______    2    66666666 (66MHz)
tve_clk-0                             ___TH_    0   129999984 (129MHz)
csi_mclk2-0                           ______    0    74250000 (74MHz)
csi_mclk1-0                           ______    0    74250000 (74MHz)
ipu_di1_clk-1                         P_____    0    64999992 (64MHz)
ipu_di0_clk-0                         P_____    1   148500000 (148MHz)
ipu_clk-0                             P__T_M    1   200000000 (200MHz)
sdma_ipg_clk-0                        ______    0    66666666 (66MHz)
sdma_ahb_clk-0                        ______    0   133333333 (133MHz)
nfc_clk-0                             ______    0    33333333 (33MHz)
vpu_core_clk-0                        ______    0   200000000 (200MHz)
vpu_clk-0                             ___TH_    0   200000000 (200MHz)
ahb_max_clk-0                         ______    3   133333333 (133MHz)
ahb_clk-0                             P_____    5   133333333 (133MHz)
axi_b_clk-0                           P_____    2   200000000 (200MHz)
axi_a_clk-0                           P_____    1   400000000 (400MHz)
main_bus_clk-0                        P_____    4   400000000 (400MHz)
periph_apm_clk-0                      P_____    0  1000000000 (1000MHz)
cpu_clk-0                             ______    1  1000000000 (1000MHz)
lp_apm-0                              P_____    1    24000000 (24MHz)
gpc_dvfs_clk-0                        ______    0           0 (0Hz)
pll3-0                                P_____    1   297000000 (297MHz)
pll2-0                                P_____    5   400000000 (400MHz)
pll1_sw_clk-0                         P_____    1  1000000000 (1000MHz)
pll1_main_clk-0                       P_____    1  1000000000 (1000MHz)
ckil-0                                ______    1       32768 (32KHz)
ckih2-0                               ______    0           0 (0Hz)
ckih-0                                ______    0           0 (0Hz)
osc-0                                 ______    6    24000000 (24MHz)
}}}

5> Partition

{{{
$ cat /proc/partitions
major minor  #blocks  name

 179        0    3872256 mmcblk0
 179        1    3145728 mmcblk0p1

}}}

6> Version

{{{
cat /proc/version
Linux version 2.6.35.3+ (root@localhost.localdomain) (gcc version 4.7.2 20120701 (prerelease) (crosstool-NG linaro-1.13.1-2012.07-20120720 - Linaro GCC 2012.07) ) #26 PREEMPT Fri Jan 4 19:32:41 ICT 2013
}}}

7> Kernel command line

{{{
$ cat /proc/cmdline
console=ttymxc0,115200 gpu_nommu setenv bootargs console=ttymxc0,115200 video=mxcdi0fb:RGB24,1024x768M@60 hdmi dmfc=3 di0_primary root=/dev/mmcblk0p1 rw rootwait
}}}

8> CPU freq scaling

{{{
$ ls /sys/devices/system/cpu/cpu0/cpufreq/
affected_cpus               related_cpus                 scaling_max_freq
cpuinfo_cur_freq            scaling_available_governors  scaling_min_freq
cpuinfo_max_freq            scaling_cur_freq             scaling_setspeed
cpuinfo_min_freq            scaling_driver               stats
cpuinfo_transition_latency  scaling_governor

$ sudo cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq
1000000

$ sudo cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
1000000

$ sudo cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
400000
}}}

= SETTING UP NFS SERVER =

{{{
$ sudo apt-get install nfs-kernel-server
$ vi /etc/exports
$ /tftpboot *(rw,sync,no_root_squash)
$ sudo /etc/init.d/nfs-kernel-server start
}}}

= SETTING UP TFTP SERVER =

{{{
$ sudo apt-get install xinetd tftpd tftp
$ vi /etc/xinetd.d/tftp
{
        protocol       =  udp
        port           =  69
        socket_type    =  dgram
        wait           =  yes
        user           =  nobody
        server         =  /usr/sbin/in.tftpd
        server_args    =  /tftpboot
        disable        =  no 
}

$ sudo mkdir /tftpboot
$ sudo mkdir /tftpboot/kernel/
$ sudo mkdir /tftpboot/rootfs/
$ sudo chmod -R 777 /tftpboot
$ sudo chown -R nobody /tftpboot

$ sudo /etc/init.d/xinetd stop
$ sudo /etc/init.d/xinetd start
}}}

= UBOOT ENV EXAMPLE =

{{{
$ setenv ipaddr 192.168.1.12
$ setenv netmask 255.255.255.0
$ setenv gatewayip 192.168.1.1
$ setenv serverip 192.168.1.33
$ setenv bootpath /tftpboot/rootfs
$ setenv bootfile /tftpboot/kernel/uImage.gz
$ setenv bootcmd tftp;bootm
$ setenv bootargs console=ttySC1,115200 root=/dev/nfs rw nfsroot=192.168.1.33:/tftpboot/rootfs ip=192.168.1.12
$ saveenv
}}}

------------------------------------------------------

=AWK=

 {{{
    In tat ca cac dong cho chua pattern "bit" trong header iodefine.h :

    $ awk '/bit/{print}' iodefine.h

    In tat ca cac dong khong co chua pattern "bit" trong header:

    $ awk '!/bit/{print}' iodefine.h     

 }}}  